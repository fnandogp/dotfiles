# Imports
snippet rir
  import React from 'react';

snippet rirc
  import React, {Component} from 'react';

snippet ript
  import PropTypes from 'prop-types';

snippet rird
  import ReactDOM from 'react-dom';

snippet rcdm
  componentDidMount() {
    ${1}
  }

snippet rcwm
  componentWillMount() {
    ${1}
  }

snippet rcwr
  componentWillReceiveProps() {
    ${1}
  }

snippet rscu
  shouldComponentUpdate() {
    ${1}
  }

snippet rcwup
  componentWillUpdate() {
    ${1}
  }

snippet rcdup
  componentDidUpdate() {
    ${1}
  }

snippet rcwun
  componentWillUnmount() {
    ${1}
  }

snippet rcdc
  componentDidCatch() {
    ${1}
  }

snippet rcct
  ${1}.contextTypes = {
    ${2}
  }

snippet rcpt
  ${1}.propTypes = {
    ${2}
  }

snippet rcdp
  ${1}.defaultProps = {
    ${2}
  }

snippet rscct
  static contextTypes = {
    ${1}
  };

snippet rscpt
  static propsTypes = {
    ${1}
  };

snippet rscdp
  static defaultProps = {
    ${1}
  };

snippet rcdn
  displayName: ${1}

snippet rren
  render() {
    ${1}
  }

snippet rsst
  setState()

snippet rprops
  this.props.${1}

snippet rstate
  this.state.${1}

snippet rrrc
  React.render()

snippet rfrag
  <React.Fragment>
    ${1}
  </React.Fragment>

snippet rcns
  constructor(props) {
    super(props);

    ${1}
  }

snippet rclass
  class ${1} extends React.Component {
    ${2}
  }

  export default $1;

snippet rfunc
  import React from 'react';

  const ${1} = props => {
    return (
	    ${2}
    );
  }

  export default $1;

#############
# PropTypes #
#############

snippet rpta
  PropTypes.array,

snippet rptar
  PropTypes.array.isRequired,

snippet rptb
  PropTypes.bool,

snippet rptbr
  PropTypes.bool.isRequired,

snippet rptf
  PropTypes.func,

snippet rptfr
  PropTypes.func.isRequired,

snippet rptn
  PropTypes.number,

snippet rptnr
  PropTypes.number.isRequired,

snippet rpto
  PropTypes.object.,

snippet rptor
  PropTypes.object.isRequired,

snippet rpts
  PropTypes.string,

snippet rptsr
  PropTypes.string.isRequired,

snippet rptnd
  PropTypes.node,

snippet rptndr
  PropTypes.node.isRequired,

snippet rptel
  PropTypes.element,

snippet rptelr
  PropTypes.element.isRequired,

snippet rpti
  PropTypes.instanceOf(${1}),

snippet rptir
  PropTypes.instanceOf(${1}).isRequired,

snippet rpte
  PropTypes.oneOf([${1}]),

snippet rpter
  PropTypes.oneOf([${1}]).isRequired,

snippet rptet
  PropTypes.oneOfType([${1}]),

snippet rptetr
  PropTypes.oneOfType([${1}]).isRequired,

snippet rptao
  PropTypes.arrayOf(${1}),

snippet rptaor
  PropTypes.arrayOf(${1}).isRequired,

snippet rptoo
  PropTypes.objectOf(${1}),

snippet rptoor
  PropTypes.objectOf(${1}).isRequired,

snippet rptsh
  PropTypes.shape({${1}}),

snippet rptshr
  PropTypes.shape({${1}}).isRequired,

